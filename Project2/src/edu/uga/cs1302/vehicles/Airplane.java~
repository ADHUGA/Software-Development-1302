package edu.uga.cs1302.vehicles;

public class Airplane extends Vehicle implements Flyable
{
    private int engines; //This is private to ensure proper encapsulation.
    private int maxRange;//This is private to ensure proper encapsulation.
    private int maxAltitude;//This is private to ensure proper encapsulation.

    public Airplane(String n, String m, int y, int p, int s, int e, int ma, int mg)//Parameter matches that of the parent class with the added variable of e set to the exclusive variable of Airplane.
    {
    	super( n, m, y, p, s);//Using parent's parameters.
    	engines = e;
    	maxAltitude = ma;
    	maxRange = mg;
    }

    public int getEngines() //public getter to get engines so it can be used anywhere
    {
    	return engines;
    }

    public void setEngines(int e) 
    {
    	engines = e;
    }

	@Override
	public int getMaxAltitude()  //public getter to get Max Altitude so it can be used anywhere
	{
		return maxAltitude;
	}

	@Override
	public void setMaxAltitude(int maxAltitude) 
	{
		this.maxAltitude = maxAltitude;
	}

	@Override
	public int getMaxRange() 
	{
		return maxRange;
	}

	@Override
	public void setMaxRange(int maxRange) 
	{
		this.maxRange = maxRange;
	}
	
	@Override
	public String toString()
	{
		return getName();
	}
	
	@Override
    public boolean equals(Object obj) //Overriden equals method just in case I needed it.
    {
    	if( obj == this) return true;
    	if(obj == null || !(obj instanceof Vehicle)) return false;
    	Vehicle otherVehicle = (Vehicle) obj;
    	return getName() != null && getName().equals(otherVehicle.getName() ) && getManufacturer() != null && getManufacturer().equals(otherVehicle.getManufacturer()) && getYear() == otherVehicle.getYear() && getMaxPassengers() == otherVehicle.getMaxPassengers() && getTopSpeed() == otherVehicle.getTopSpeed();
    	
    }
}
